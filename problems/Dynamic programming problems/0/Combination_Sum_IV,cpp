// //leetcode and ninja
// class Solution {//do tabu
// public:
//     int solve(vector<int>& nums, int target)
//     {
//         if(target==0)
//             return 1;
//         if(target<0)
//             return 0;
//         int ans=0;
//         int size=nums.size();
//         for(int i=0;i<size;i++){
//             ans+=solve(nums,target-nums[i]);
//         }
//         return ans;
//     }

//     int solvememo(vector<int>& nums, int target,vector<int>& memo)
//     {
//         if(target==0)
//             return 1;
//         if(target<0)
//             return 0;
//         if(memo[target]!=-1)
//         {
//             return memo[target];
//         }
//         int ans=0;
//         int size=nums.size();
//         for(int i=0;i<size;i++){
//             ans+=solvememo(nums,target-nums[i],memo);
//         }
//         memo[target]=ans;
//         return  memo[target];
//     }
//     int combinationSum4(vector<int>& nums, int target) {
//         vector<int> memo(target+1,-1);
//         return solvememo(nums,target,memo);
//     }
// };